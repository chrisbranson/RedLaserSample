// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace RedLaserSample {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("RLSampleViewController")]
	public partial class RLSampleViewController {
		
		private MonoTouch.UIKit.UIView __mt_view;
		
		private MonoTouch.UIKit.UILabel __mt_eanLabel;
		
		private MonoTouch.UIKit.UISwitch __mt_enableUPCESwitch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableEAN8Switch;
		
		private MonoTouch.UIKit.UILabel __mt_typeLabel;
		
		private MonoTouch.UIKit.UISwitch __mt_enableSTICKYSwitch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableEAN13Switch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableCode39Switch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableCode128Switch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableDataMatrixSwitch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableQRCodeSwitch;
		
		private MonoTouch.UIKit.UISwitch __mt_enableITFSwitch;
		
		private OverlayController __mt_overlayController;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Export("scanPressed")]
		partial void scanPressed (MonoTouch.UIKit.UIBarButtonItem sender);

		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				this.__mt_view = ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("eanLabel")]
		private MonoTouch.UIKit.UILabel eanLabel {
			get {
				this.__mt_eanLabel = ((MonoTouch.UIKit.UILabel)(this.GetNativeField("eanLabel")));
				return this.__mt_eanLabel;
			}
			set {
				this.__mt_eanLabel = value;
				this.SetNativeField("eanLabel", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableUPCESwitch")]
		private MonoTouch.UIKit.UISwitch enableUPCESwitch {
			get {
				this.__mt_enableUPCESwitch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableUPCESwitch")));
				return this.__mt_enableUPCESwitch;
			}
			set {
				this.__mt_enableUPCESwitch = value;
				this.SetNativeField("enableUPCESwitch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableEAN8Switch")]
		private MonoTouch.UIKit.UISwitch enableEAN8Switch {
			get {
				this.__mt_enableEAN8Switch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableEAN8Switch")));
				return this.__mt_enableEAN8Switch;
			}
			set {
				this.__mt_enableEAN8Switch = value;
				this.SetNativeField("enableEAN8Switch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("typeLabel")]
		private MonoTouch.UIKit.UILabel typeLabel {
			get {
				this.__mt_typeLabel = ((MonoTouch.UIKit.UILabel)(this.GetNativeField("typeLabel")));
				return this.__mt_typeLabel;
			}
			set {
				this.__mt_typeLabel = value;
				this.SetNativeField("typeLabel", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableSTICKYSwitch")]
		private MonoTouch.UIKit.UISwitch enableSTICKYSwitch {
			get {
				this.__mt_enableSTICKYSwitch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableSTICKYSwitch")));
				return this.__mt_enableSTICKYSwitch;
			}
			set {
				this.__mt_enableSTICKYSwitch = value;
				this.SetNativeField("enableSTICKYSwitch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableEAN13Switch")]
		private MonoTouch.UIKit.UISwitch enableEAN13Switch {
			get {
				this.__mt_enableEAN13Switch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableEAN13Switch")));
				return this.__mt_enableEAN13Switch;
			}
			set {
				this.__mt_enableEAN13Switch = value;
				this.SetNativeField("enableEAN13Switch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableCode39Switch")]
		private MonoTouch.UIKit.UISwitch enableCode39Switch {
			get {
				this.__mt_enableCode39Switch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableCode39Switch")));
				return this.__mt_enableCode39Switch;
			}
			set {
				this.__mt_enableCode39Switch = value;
				this.SetNativeField("enableCode39Switch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableCode128Switch")]
		private MonoTouch.UIKit.UISwitch enableCode128Switch {
			get {
				this.__mt_enableCode128Switch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableCode128Switch")));
				return this.__mt_enableCode128Switch;
			}
			set {
				this.__mt_enableCode128Switch = value;
				this.SetNativeField("enableCode128Switch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableDataMatrixSwitch")]
		private MonoTouch.UIKit.UISwitch enableDataMatrixSwitch {
			get {
				this.__mt_enableDataMatrixSwitch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableDataMatrixSwitch")));
				return this.__mt_enableDataMatrixSwitch;
			}
			set {
				this.__mt_enableDataMatrixSwitch = value;
				this.SetNativeField("enableDataMatrixSwitch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableQRCodeSwitch")]
		private MonoTouch.UIKit.UISwitch enableQRCodeSwitch {
			get {
				this.__mt_enableQRCodeSwitch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableQRCodeSwitch")));
				return this.__mt_enableQRCodeSwitch;
			}
			set {
				this.__mt_enableQRCodeSwitch = value;
				this.SetNativeField("enableQRCodeSwitch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("enableITFSwitch")]
		private MonoTouch.UIKit.UISwitch enableITFSwitch {
			get {
				this.__mt_enableITFSwitch = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("enableITFSwitch")));
				return this.__mt_enableITFSwitch;
			}
			set {
				this.__mt_enableITFSwitch = value;
				this.SetNativeField("enableITFSwitch", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("overlayController")]
		private OverlayController overlayController {
			get {
				this.__mt_overlayController = ((OverlayController)(this.GetNativeField("overlayController")));
				return this.__mt_overlayController;
			}
			set {
				this.__mt_overlayController = value;
				this.SetNativeField("overlayController", value);
			}
		}
	}
}
