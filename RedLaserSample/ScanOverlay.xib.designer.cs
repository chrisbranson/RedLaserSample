// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace RedLaserSample {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("OverlayController")]
	public partial class OverlayController {
		
		private MonoTouch.UIKit.UIView __mt_view;
		
		private MonoTouch.UIKit.UIBarButtonItem __mt_flashButton;
		
		private MonoTouch.UIKit.UILabel __mt_latestResultLabel;
		
		private MonoTouch.UIKit.UIToolbar __mt_toolBar;
		
		private MonoTouch.UIKit.UIBarButtonItem __mt_cancelButton;
		
		private MonoTouch.UIKit.UIImageView __mt_redlaserLogo;
		
		private MonoTouch.UIKit.UILabel __mt_textCue;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Export("cancelPressed")]
		partial void cancelPressed (MonoTouch.UIKit.UIBarButtonItem sender);

		[MonoTouch.Foundation.Export("flashPressed")]
		partial void flashPressed (MonoTouch.UIKit.UIBarButtonItem sender);

		[MonoTouch.Foundation.Export("rotatePressed")]
		partial void rotatePressed (MonoTouch.UIKit.UIBarButtonItem sender);

		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				this.__mt_view = ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("flashButton")]
		private MonoTouch.UIKit.UIBarButtonItem flashButton {
			get {
				this.__mt_flashButton = ((MonoTouch.UIKit.UIBarButtonItem)(this.GetNativeField("flashButton")));
				return this.__mt_flashButton;
			}
			set {
				this.__mt_flashButton = value;
				this.SetNativeField("flashButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("latestResultLabel")]
		private MonoTouch.UIKit.UILabel latestResultLabel {
			get {
				this.__mt_latestResultLabel = ((MonoTouch.UIKit.UILabel)(this.GetNativeField("latestResultLabel")));
				return this.__mt_latestResultLabel;
			}
			set {
				this.__mt_latestResultLabel = value;
				this.SetNativeField("latestResultLabel", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("toolBar")]
		private MonoTouch.UIKit.UIToolbar toolBar {
			get {
				this.__mt_toolBar = ((MonoTouch.UIKit.UIToolbar)(this.GetNativeField("toolBar")));
				return this.__mt_toolBar;
			}
			set {
				this.__mt_toolBar = value;
				this.SetNativeField("toolBar", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("cancelButton")]
		private MonoTouch.UIKit.UIBarButtonItem cancelButton {
			get {
				this.__mt_cancelButton = ((MonoTouch.UIKit.UIBarButtonItem)(this.GetNativeField("cancelButton")));
				return this.__mt_cancelButton;
			}
			set {
				this.__mt_cancelButton = value;
				this.SetNativeField("cancelButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("redlaserLogo")]
		private MonoTouch.UIKit.UIImageView redlaserLogo {
			get {
				this.__mt_redlaserLogo = ((MonoTouch.UIKit.UIImageView)(this.GetNativeField("redlaserLogo")));
				return this.__mt_redlaserLogo;
			}
			set {
				this.__mt_redlaserLogo = value;
				this.SetNativeField("redlaserLogo", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("textCue")]
		private MonoTouch.UIKit.UILabel textCue {
			get {
				this.__mt_textCue = ((MonoTouch.UIKit.UILabel)(this.GetNativeField("textCue")));
				return this.__mt_textCue;
			}
			set {
				this.__mt_textCue = value;
				this.SetNativeField("textCue", value);
			}
		}
	}
}
